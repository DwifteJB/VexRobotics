{"mode":"Text","textContent":"//----------------------------------------------------------------------------\r//                                                                            \r//    Module:       main.cpp                                                  \r//    Author:       Owen Exon and Robbie Elliott                                                  \r//    Created:      22/03/2022                                                    \r//    Description:  JoshBot V1                                               \r//                                                                            \r//----------------------------------------------------------------------------\r\r// Include the IQ Library\r#include \"iq_cpp.h\"\r\r// Allows for easier use of the VEX Library\rusing namespace vex;\r// Functions\r\r//\r// EG: basicScreen(boolean);\r// Desc: Creates a basic screen\r// Vars: boolean, determines if you want to clear the screen or not (not recommended)\r//\rvoid basicScreen(bool remove){\r //Check if you want to clear screen\r  if (remove == false) {\r    Brain.Screen.clearScreen();\r  }\r  Brain.Screen.setCursor(1,1);\r  Brain.Screen.print(\"OWEN BOT: v1.0\");\r  Brain.Screen.newLine();\r  Brain.Screen.setCursor(2,1);\r  Brain.Screen.print(\"Battery: %d%%\", Brain.Battery.capacity());\r}\r\r// ROBOT STARTS HERE\r\rvoid init() {\r  // Startup script\r  basicScreen(false);\r}\rvoid checkClaw() {\r  basicScreen(false);\r  Brain.Screen.setCursor(3,1);\r  Brain.Screen.print(\"Spinning: %d\", (bool)claw.isSpinning());\r  Brain.Screen.setCursor(4,1);\r  Brain.Screen.print(\"Claw Velocity: %d\", (char)claw.velocity(percent));\r}\rvoid checkVisual() {\r  basicScreen(false);\r  Brain.Screen.setCursor(3,1);\r  Brain.Screen.print(\"Object found: %d\", (bool)dist.foundObject());\r  Brain.Screen.setCursor(4,1);\r  Brain.Screen.print(\"Distance: %dmm\", (int)dist.distance(mm));\r}\rvoid clawMovement() {\r  // clamp system\r  if (claw.position(degrees) < -230){\r    claw.spin(reverse);\r    claw.setVelocity(20,percent);\r    wait(1,seconds);\r    claw.stop();\r    return;\r  }\r  else if (claw.position(degrees) > 1){\r    claw.spin(forward);\r    claw.setVelocity(20,percent);\r    wait(1,seconds);\r    claw.stop();\r    return;\r  }\r  else {\r    claw.spin(forward);\r    claw.setVelocity(Controller.AxisD.position(percent),percent);\r  }\r  checkClaw();\r}\rint main() {\r  // Init the bot\r  init();\r  // Allows claw movement on the D Axis\r  Controller.AxisD.changed(clawMovement);\r  // checking stuff\r  Brain.buttonUp.pressed(checkClaw);\r  Brain.buttonDown.pressed(checkVisual);\r}\r\r// ROBOT ENDS HERE","textLanguage":"cpp","rconfig":[{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"arcadel"},"triportSourcePort":22},{"port":[6,12,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"165","unit":"mm","wheelbase":"130","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[8],"name":"claw","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[3],"name":"dist","customName":true,"deviceType":"Distance","deviceClass":"sonar","setting":{},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20211210.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}