{"mode":"Text","textContent":"//----------------------------------------------------------------------------//                                                                            //    Module:       main.cpp                                                  //    Author:       Owen Exon and Robbie Elliott                                                  //    Created:      22/03/2022                                                    //    Description:  JoshBot V1                                               //                                                                            //----------------------------------------------------------------------------// Include the IQ Library#include \"iq_cpp.h\"// Global Variablesbool bypass_autoclamp = false;// Allows for easier use of the VEX Libraryusing namespace vex;// Functions//// EG: basicScreen(boolean);// Desc: Creates a basic screen// Vars: boolean, determines if you want to clear the screen or not (not recommended)//void basicScreen(bool remove){ //Check if you want to clear screen  if (remove == false) {    Brain.Screen.clearScreen();  }  Brain.Screen.setCursor(1,1);  Brain.Screen.print(\"Baller: v1.0\");  Brain.Screen.newLine();  Brain.Screen.setCursor(2,1);  Brain.Screen.print(\"Battery: %d%%\", Brain.Battery.capacity());}// ROBOT STARTS HEREvoid init() {  // Startup script  basicScreen(false);}void checkClaw() {  basicScreen(false);  Brain.Screen.setCursor(3,1);  Brain.Screen.print(\"Spinning: %d\", (bool)claw.isSpinning());  Brain.Screen.setCursor(4,1);  Brain.Screen.print(\"Claw Velocity: %d\", (char)claw.velocity(percent));}void autoGrab() {  if (dist.distance(mm) < 20 && bypass_autoclamp == false) {    // I found the object within 20mm of the claw. What should I do?    // I should grab it    claw.spinToPosition(0, deg);  }}void autoClampToggle() {  if(bypass_autoclamp == true) {    bypass_autoclamp = false;  } else {    bypass_autoclamp = true; // This is so simple, thank you previous nodejs knowledge!  }}void checkVisual() {  basicScreen(false);  Brain.Screen.setCursor(3,1);  Brain.Screen.print(\"Object found: %d\", (bool)dist.foundObject());  Brain.Screen.setCursor(4,1);  Brain.Screen.print(\"Distance: %dmm\", (int)dist.distance(mm));}void clawMovement() {  // Clamps the Motor  if (claw.position(degrees) < -230){    claw.spin(reverse);    claw.setVelocity(20,percent);    wait(1,seconds);    claw.stop();    return;  }  else if (claw.position(degrees) > 1){    claw.spin(forward);    claw.setVelocity(20,percent);    wait(1,seconds);    claw.stop();    return;  }  else {    claw.spin(forward);    claw.setVelocity(Controller.AxisD.position(percent),percent);  }  checkClaw();}int main() {  // Initialize the robot  init();  // Allows claw movement on the D Axis  Controller.AxisD.changed(clawMovement);  // If the distance is changed, start autoGrab()  dist.changed(autoGrab);  // Buttons  // Debugging Menu  Brain.buttonUp.pressed(checkClaw);  Brain.buttonDown.pressed(checkVisual);  // Turning off/on Autoclamp    Controller.ButtonEUp.pressed(autoClampToggle);}// ROBOT ENDS HERE","textLanguage":"cpp","rconfig":[{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"arcadel"},"triportSourcePort":22},{"port":[6,12,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"165","unit":"mm","wheelbase":"130","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[8],"name":"claw","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[3],"name":"dist","customName":true,"deviceType":"Distance","deviceClass":"sonar","setting":{},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20211210.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}